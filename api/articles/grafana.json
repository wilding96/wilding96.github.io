{"title":"grafana","uid":"f60ede68dc7165577531ba0535048c4c","slug":"grafana","date":"2021-06-02T03:06:00.000Z","updated":"2023-04-14T03:29:03.979Z","comments":true,"path":"api/articles/grafana.json","keywords":null,"cover":[],"content":"<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><p>grafana是一款功能强大的数据可视化软件，支持多种数据源。本文将介绍如何配置grafana开发环境，可对其进行汉化等处理。</p>\n<p>如果不二次开发，可参照文档直接安装已编译的版本：<a href=\"https://grafana.com/grafana/download\">https://grafana.com/grafana/download</a></p>\n<p>下文介绍的配置方法可用于修改grafana源码</p>\n<p>开发环境：MacOS</p>\n<p>grafana 依赖 node 和 go ，需要先安装好 node 和 go。</p>\n<h1 id=\"一-安装-node\"><a href=\"#一-安装-node\" class=\"headerlink\" title=\"一.安装 node\"></a>一.安装 node</h1><p>我这里的 grafana 是 7.5， 需要 14 版本的 node</p>\n<p>安装 node 有两种方式</p>\n<p>1.如果之前没有装过，直接 brew install node 就可以了，这样安装的 node 默认是最新版本，如果需要指定版本，可以在 node 后 通过 @ 来指定安装某个版本。</p>\n<p>2.通过版本管理神器 n 来升级</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">npm i n -g  &#x2F;&#x2F; 安装 node 版本管理神器\nn -V &#x2F;&#x2F; 安装后查看 n 的版本\nn latest &#x2F;&#x2F; 使用或安装最新的官方发布：\nn stable &#x2F;&#x2F; 使用或安装稳定的正式版本：\nn lts &#x2F;&#x2F; 使用或安装最新的LTS正式版本：</code></pre>\n<p>安装好 node 后顺便升级下 npm</p>\n<p><code>npm i npm@latest -g</code></p>\n<p>编辑.npmrc</p>\n<p><code>$ vi ~/.npmrc</code></p>\n<p>添加如下内容（设置淘宝镜像）：</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">sass_binary_site &#x3D; https:&#x2F;&#x2F;npm.taobao.org&#x2F;mirrors&#x2F;node-sass&#x2F;\nphantomjs_cdnurl &#x3D; https:&#x2F;&#x2F;npm.taobao.org&#x2F;mirrors&#x2F;phantomjs&#x2F;\nregistry &#x3D; http:&#x2F;&#x2F;registry.npm.taobao.org</code></pre>\n\n<h1 id=\"二-安装-go\"><a href=\"#二-安装-go\" class=\"headerlink\" title=\"二.安装 go\"></a>二.安装 go</h1><p>通过 brew 安装 go</p>\n<p><code>brew install go  // 安装 golang</code></p>\n<p>然后查看 go 的环境变量配置</p>\n<p><code>go env</code></p>\n<p>上面的命令默认得到如下信息</p>\n<pre class=\"line-numbers language-GO111MODULE\" data-language=\"GO111MODULE\"><code class=\"language-GO111MODULE\">GOARCH&#x3D;&quot;amd64&quot;\nGOBIN&#x3D;&quot;&quot;\nGOCACHE&#x3D;&quot;&#x2F;Users&#x2F;wilding&#x2F;Library&#x2F;Caches&#x2F;go-build&quot;\nGOENV&#x3D;&quot;&#x2F;Users&#x2F;wilding&#x2F;Library&#x2F;Application Support&#x2F;go&#x2F;env&quot;\nGOEXE&#x3D;&quot;&quot;\nGOFLAGS&#x3D;&quot;&quot;\nGOHOSTARCH&#x3D;&quot;amd64&quot;\nGOHOSTOS&#x3D;&quot;darwin&quot;\nGOINSECURE&#x3D;&quot;&quot;\nGOMODCACHE&#x3D;&quot;&#x2F;Users&#x2F;wilding&#x2F;go&#x2F;pkg&#x2F;mod&quot;\nGONOPROXY&#x3D;&quot;&quot;\nGONOSUMDB&#x3D;&quot;&quot;\nGOOS&#x3D;&quot;darwin&quot;\nGOPATH&#x3D;&quot;&#x2F;Users&#x2F;wilding&#x2F;go&quot;\nGOPRIVATE&#x3D;&quot;&quot;\nGOPROXY&#x3D;&quot;https:&#x2F;&#x2F;goproxy.cn&quot;\nGOROOT&#x3D;&quot;&#x2F;usr&#x2F;local&#x2F;Cellar&#x2F;go&#x2F;1.16.4&#x2F;libexec&quot;\nGOSUMDB&#x3D;&quot;sum.golang.org&quot;\nGOTMPDIR&#x3D;&quot;&quot;\nGOTOOLDIR&#x3D;&quot;&#x2F;usr&#x2F;local&#x2F;Cellar&#x2F;go&#x2F;1.16.4&#x2F;libexec&#x2F;pkg&#x2F;tool&#x2F;darwin_amd64&quot;\nGOVCS&#x3D;&quot;&quot;\nGOVERSION&#x3D;&quot;go1.16.4&quot;\nGCCGO&#x3D;&quot;gccgo&quot;\nAR&#x3D;&quot;ar&quot;\nCC&#x3D;&quot;clang&quot;\nCXX&#x3D;&quot;clang++&quot;\nCGO_ENABLED&#x3D;&quot;1&quot;\nGOMOD&#x3D;&quot;&#x2F;dev&#x2F;null&quot;\nCGO_CFLAGS&#x3D;&quot;-g -O2&quot;\nCGO_CPPFLAGS&#x3D;&quot;&quot;\nCGO_CXXFLAGS&#x3D;&quot;-g -O2&quot;\nCGO_FFLAGS&#x3D;&quot;-g -O2&quot;\nCGO_LDFLAGS&#x3D;&quot;-g -O2&quot;\nPKG_CONFIG&#x3D;&quot;pkg-config&quot;\nGOGCCFLAGS&#x3D;&quot;-fPIC -arch x86_64 -m64 -pthread -fno-caret-diagnostics -Qunused-arguments -fmessage-length&#x3D;0 -fdebug-prefix-map&#x3D;&#x2F;var&#x2F;folders&#x2F;yr&#x2F;qz8g29fn26d94f79sc1ncr040000gn&#x2F;T&#x2F;go-build1846110959&#x3D;&#x2F;tmp&#x2F;go-build -gno-record-gcc-switches -fno-common&quot;</code></pre>\n<p>注意 GOPATH 地址，在 “&#x2F;Users&#x2F;wilding&#x2F;go”下，其中 wilding 是我的用户名。wilding 下是没有 go 这个文件夹，需要我们自己建立。</p>\n<p>假如我们想写一个 go 的hello world，就需要把这个程序放到 go 目录下。</p>\n<p>假如想要修改 GOPATH 也是可以的。用如下命令：</p>\n<p><code>vim ~/.bash_profile </code></p>\n<p>添加如下代码：export GOPATH&#x3D;”XXXXXXXXXX”<br>然后快捷键 shift + zz 关闭文件</p>\n<p>到这一步，go 就算安装到我们的电脑里了。</p>\n<h1 id=\"三-下载grafana源码\"><a href=\"#三-下载grafana源码\" class=\"headerlink\" title=\"三.下载grafana源码\"></a>三.下载grafana源码</h1><p>从GitHub上获取代码，地址 <a href=\"https://github.com/grafana/grafana\">https://github.com/grafana/grafana</a> ，切换分支到稳定版本7.5.7，基于该版本进行二次开发。</p>\n<p>clone完我们需要的代码后，就可以开始编译。</p>\n<p>开始编译</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">$ yarn config set PUPPETEER_SKIP_CHROMIUM_DOWNLOAD 1\n$ yarn install --pure-lockfile\n$ yarn start</code></pre>\n\n<h1 id=\"四-启动前后端环境\"><a href=\"#四-启动前后端环境\" class=\"headerlink\" title=\"四.启动前后端环境\"></a>四.启动前后端环境</h1><p>在上述操作后yarn start后会如图所示（或者类似的），这时候在项目里的public&#x2F;build&#x2F;里已经有编译后的文件了</p>\n<p><img src=\"https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/cbcde4092bc6436d97f10c9aa9f45264~tplv-k3u1fbpfcp-watermark.image\" alt=\"image.png\"></p>\n<p>接下来就是后端环境了<br>分别输入</p>\n<p><code>go run build.go setup</code><br><code>go run build.go build</code></p>\n<p>编译完成后，会看到项目里多了个bin文件夹</p>\n<p><img src=\"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/47f67906c7ab437aa27a59c6d14a6179~tplv-k3u1fbpfcp-watermark.image\" alt=\"image.png\"></p>\n<p>然后输入(如果和笔者bin底下的文件夹名字不一致，只要运行到最后一层的grafana-server就行，这是关键）</p>\n<p><code>./bin/darwin-amd64/grafana-server</code></p>\n<p>然后出现</p>\n<p><img src=\"https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/642248f7ccdb46a591e8821c077cb871~tplv-k3u1fbpfcp-watermark.image\" alt=\"image.png\"></p>\n<p>访问<a href=\"http://localhost:3000/\">http://localhost:3000</a> 输入初始账号admin和初始密码admin</p>\n<p><img src=\"https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/0e50498057124cb095df99f621887087~tplv-k3u1fbpfcp-watermark.image\" alt=\"image.png\"></p>\n<p>———-<strong>大功告成</strong>———–</p>\n","text":"前言grafana是一款功能强大的数据可视化软件，支持多种数据源。本文将介绍如何配置grafana开发环境，可对其进行汉化等处理。 如果不二次开发，可参照文档直接安装已编译的版本：https://grafana.com/grafana/download 下文介绍的配置方法可用于修...","link":"","photos":[],"count_time":{"symbolsCount":"3.5k","symbolsTime":"3 mins."},"categories":[],"tags":[{"name":"日常记录","slug":"日常记录","count":4,"path":"api/tags/日常记录.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%89%8D%E8%A8%80\"><span class=\"toc-text\">前言</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E4%B8%80-%E5%AE%89%E8%A3%85-node\"><span class=\"toc-text\">一.安装 node</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E4%BA%8C-%E5%AE%89%E8%A3%85-go\"><span class=\"toc-text\">二.安装 go</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E4%B8%89-%E4%B8%8B%E8%BD%BDgrafana%E6%BA%90%E7%A0%81\"><span class=\"toc-text\">三.下载grafana源码</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%9B%9B-%E5%90%AF%E5%8A%A8%E5%89%8D%E5%90%8E%E7%AB%AF%E7%8E%AF%E5%A2%83\"><span class=\"toc-text\">四.启动前后端环境</span></a></li></ol>","author":{"name":"Dylan","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"el-datepicker","uid":"9fd14fe00f284de4b49821647a08d25c","slug":"el-datepicker","date":"2022-04-14T07:19:00.000Z","updated":"2023-04-14T03:27:49.810Z","comments":true,"path":"api/articles/el-datepicker.json","keywords":null,"cover":null,"text":"需求： 默认选择近一个月，根据DefaultTimeRange字段获取默认查询时长，最多查询日期范围为两年的时间 原版本 html &lt;el-date-picker v-model&#x3D;&quot;timeRange&quot; :range-separator&#x3...","link":"","photos":[],"count_time":{"symbolsCount":"4.5k","symbolsTime":"4 mins."},"categories":[],"tags":[{"name":"日常记录","slug":"日常记录","count":4,"path":"api/tags/日常记录.json"}],"author":{"name":"Dylan","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true},"next_post":{}}